[{"path":[]},{"path":"/articles/statgenQTLxT.html","id":"theoretical-background","dir":"Articles","previous_headings":"Multi-Trait GWAS","what":"Theoretical background","title":"Multi-trait GWAS with the statgenQTLxT package","text":"Multi-trait GWAS statgenQTLxT package estimates tests effect SNP different trials different traits, one SNP time. Genetic residual covariances fitted , model without SNPs. Given balanced data \\(n\\) genotypes \\(p\\) traits (trials) fit mixed model form \\(Y = \\left(\\begin{array}{c} Y_1 \\\\ \\vdots \\\\ Y_p\\end{array}\\right) = \\left(\\begin{array}{c} X\\gamma_1 \\\\ \\vdots \\\\ X\\gamma_p\\end{array}\\right) + \\left(\\begin{array}{c} x\\beta_1 \\\\ \\vdots \\\\ x\\beta_p\\end{array}\\right) + \\left(\\begin{array}{c} G_1 \\\\ \\vdots \\\\ G_p\\end{array}\\right) + \\left(\\begin{array}{c} E_1 \\\\ \\vdots \\\\ E_p\\end{array}\\right)\\) \\(Y_1\\) \\(Y_p\\) \\(n × 1\\) vectors phenotypic values traits trials \\(1, \\ldots, p\\). \\(x\\) \\(n × 1\\) vector scores marker consideration, \\(X\\) \\(n × q\\) design matrix covariates. default trait (environment) specific intercept included. vector containing genetic background effects \\(G_1, \\ldots, G_p\\) Gaussian zero mean covariance \\(V_g \\otimes K\\), \\(V_g\\) \\(p × p\\) matrix genetic (co)variances, \\(K\\) \\(n × n\\) kinship matrix. Similarly, residual errors (\\(E_1, \\ldots, E_p\\)) covariance \\(V_e \\otimes I_n\\), \\(p × p\\) matrix \\(V_e\\) residual (co)variances.","code":""},{"path":"/articles/statgenQTLxT.html","id":"common","dir":"Articles","previous_headings":"Multi-Trait GWAS > Theoretical background","what":"Hypotheses for the SNP-effects","title":"Multi-trait GWAS with the statgenQTLxT package","text":"SNP, null-hypothesis \\(\\beta_1 = \\dots = \\beta_p = 0\\) tested, using likelihood ratio test (LRT) described (Zhou Stephens 2014). estCom = TRUE, additional tests common effect QTL--trait (QTL × T) QTL--environment (QTL × E) performed, using parameterization \\(\\beta_j = \\alpha + \\alpha_j (1 \\leq j \\leq p)\\). (Korte et al. 2012), use likelihood ratio tests, restricted bivariate case. common effect, fit reduced model \\(\\beta_j = \\alpha\\), test \\(\\alpha = 0\\). interactions, test \\(\\alpha_1 = \\dots = \\alpha_p = 0\\).","code":""},{"path":"/articles/statgenQTLxT.html","id":"vc","dir":"Articles","previous_headings":"Multi-Trait GWAS > Theoretical background","what":"Models for the genetic and residual covariance","title":"Multi-trait GWAS with the statgenQTLxT package","text":"\\(V_g\\) \\(V_e\\) can provided user (fitVarComp = FALSE); otherwise one following models used, depending covModel. covModel = \"unst\", unstructured model assumed, (Zhou Stephens 2014): \\(V_g\\) \\(V_e\\) can positive-definite matrix, requiring total \\(p(p+1)/2\\) parameters per matrix. covModel = \"fa\", factor-analytic model fitted using EM-algorithm, (Millet et al. 2016). \\(V_g\\) \\(V_e\\) assumed form \\(W W^t + D\\), \\(W\\) \\(p × m\\) matrix factor loadings \\(D\\) diagonal matrix trait environment specific values. \\(m\\) order model, arguments mG specify order used respectively \\(V_g\\) \\(V_e\\). maxIter sets maximum number iterations used EM-algorithm. Finally, covModel = \"pw\", \\(V_g\\) \\(V_e\\) estimated ‘pairwise’, (Furlotte Eskin 2015). Looping pairs traits trials \\(1 \\leq j < k \\leq p\\), \\(V_g[j,k] = V_g[k,j]\\) \\(V_e[j,k] = V_e[k,j]\\) estimated assuming bivariate mixed model. diagonals \\(V_g\\) \\(V_e\\) fitted assuming univariate mixed models. resulting \\(V_g\\) \\(V_e\\) positive-definite, replaced nearest positive-definite matrix. case covModel = \"unst\" \"pw\" possible assume \\(V_e\\) diagonal (VeDiag = TRUE).","code":""},{"path":"/articles/statgenQTLxT.html","id":"the-class-gdata","dir":"Articles","previous_headings":"","what":"The class gData","title":"Multi-trait GWAS with the statgenQTLxT package","text":"Data analysis genomic data comes different sources stored one data object class gData (genomic Data) convenience. gData object contain data needed performing analyses, first thing using statgenQTLxT package creating gData object; see statgenGWAS package details. gData object contains following components: Marker map, data.frame describing physical positions markers chromosomes, Marker matrix, numerical matrix containing genotyping, Phenotypic data, either single data.frame list data.frames containing phenotypic data, Kinship matrix, matrix describing genetic relatedness different genotypes, covariates can used analyses. examples show gData object created.","code":""},{"path":"/articles/statgenQTLxT.html","id":"worked-example-1-multiple-traits-in-one-trial","dir":"Articles","previous_headings":"","what":"Worked example 1: multiple traits in one trial","title":"Multi-trait GWAS with the statgenQTLxT package","text":"examples functionality package two worked examples provided using maize data European Union project DROPS. data available https://doi.org/10.15454/IASSTN (Millet et al. 2019) relevant data sets included data.frames statgenGWAS package. first show load data create gData object. Users already familiar statgenGwas packages might want skip part go straight Running Multi-trait GWAS section. dropsMarkers contains coded marker information 41,722 SNPs 246 genotypes. dropsMap contains information positions SNPs B73 reference genome V2. dropsPheno contains data genotypic means (Best Linear Unbiased Estimators, BLUEs) subset ten experiments, one value per experiment per genotype, eight traits. detailed description contents data see help(dropsData, package = statgenGWAS).","code":""},{"path":"/articles/statgenQTLxT.html","id":"create-gdata-object","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial","what":"Create gData object","title":"Multi-trait GWAS with the statgenQTLxT package","text":"first step create gData object raw data can used GWAS analysis. raw data converted suitable format gData object, see help(createGData, package = statgenGWAS) statgenGWAS vignette details. running multi-trait multi-environment GWAS, traits used analysis data.frame, genotype first column phenotypic data subsequent columns. case multi-trait analysis phenotypic columns contain different traits, measured one environment, multi-environment columns correspond different environments (trait). cases data.frame may contain phenotypic data. Additional covariates need stored covar. examples data.frames look like. first example, want perform multi-trait GWAS one DROPS environments. dropsPheno contains genotypic means six traits ten trials. run multi-trait GWAS analysis ten trials, data added list ten data.frames. Recall data.frames “genotype” first column may contain traits . columns need dropped. code creates list data.frames dropsPheno. phenotypic data consists one trial/experiment, can added single data.frame without first converting list. case createGData convert input list one item. Now gData object containing map, marker information, phenotypes can created. Kinship matrix covariates may added later . get idea contents data summary gData object can made. give overview content map markers also print summary per trait per trial. Since ten trials six traits gDataDrops restrict output one trial, using trials argument summary function.","code":"data(dropsPheno, package = \"statgenGWAS\")  ## Convert phenotypic data to a list. colnames(dropsPheno)[1] <- \"genotype\" dropsPheno <- dropsPheno[c(\"Experiment\", \"genotype\", \"grain.yield\", \"grain.number\",                            \"anthesis\", \"silking\", \"plant.height\", \"ear.height\")] ## Split data by experiment. dropsPhenoList <- split(x = dropsPheno, f = dropsPheno[[\"Experiment\"]]) ## Remove Experiment column. ## phenotypic data should consist only of genotype and traits. dropsPhenoList <- lapply(X = dropsPhenoList, FUN = `[`, -1) ## Load marker data. data(\"dropsMarkers\", package = \"statgenGWAS\") ## Add genotypes as row names of dropsMarkers and drop Ind column. rownames(dropsMarkers) <- dropsMarkers[[\"Ind\"]] dropsMarkers <- dropsMarkers[, -1]  ## Load genetic map. data(\"dropsMap\", package = \"statgenGWAS\") ## Add genotypes as row names of dropsMap. rownames(dropsMap) <- dropsMap[[\"SNP.names\"]] ## Rename Chromosome and Position columns. colnames(dropsMap)[2:3] <- c(\"chr\", \"pos\")  ## Create a gData object containing map, marker and phenotypic information. gDataDrops <- statgenGWAS::createGData(geno = dropsMarkers,                                        map = dropsMap,                                         pheno = dropsPhenoList) ## Summarize gDataDrops. summary(gDataDrops, trials = \"Mur13W\") #> map #>  Number of markers: 41722  #>  Number of chromosomes: 10  #>  #> markers #>  Number of markers: 41722  #>  Number of genotypes: 246  #>  Content: #>   0 1 2 NA  #>   0.28 0.01 0.71 0  #>  #> pheno #>  Number of trials: 1  #>  #>  Mur13W: #>      Number of traits: 6  #>      Number of genotypes: 246  #>  #>         grain.yield grain.number anthesis silking plant.height ear.height #> Min.            3.3         1348       56      59          222        102 #> 1st Qu.         6.3         2641       61      64          251        125 #> Median          7.5         2965       63      66          258        133 #> Mean            7.4         2986       63      66          259        133 #> 3rd Qu.         8.4         3359       66      68          266        141 #> Max.           11.4         4510       71      74          294        172 #> NA's            0.0            0        0       0            0          0"},{"path":"/articles/statgenQTLxT.html","id":"recoding-and-cleaning-of-markers","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial","what":"Recoding and cleaning of markers","title":"Multi-trait GWAS with the statgenQTLxT package","text":"Marker data numerical without missing values order GWAS analysis. can achieved using codeMarkers() function, can also perform imputation missing markers. marker data available DROPS project already converted /T/C/G 0/1/2. still use codeMarkers() function clean markers, case removing duplicate SNPs. Note duplicate SNPs removed random. get reproducible results make sure set seed. demonstrate options codeMarkers() function, see help(codeMarkers, package = statgenGWAS) statgenGWAS vignette details.","code":"## Set seed. set.seed(1234)  ## Remove duplicate SNPs from gDataDrops. gDataDropsDedup <- statgenGWAS::codeMarkers(gDataDrops,                                              impute = FALSE,                                              verbose = TRUE)  #> Input contains 41722 SNPs for 246 genotypes. #> 0 genotypes removed because proportion of missing values larger than or equal to 1. #> 0 SNPs removed because proportion of missing values larger than or equal to 1. #> 5098 duplicate SNPs removed. #> Output contains 36624 SNPs for 246 genotypes."},{"path":"/articles/statgenQTLxT.html","id":"mtg","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial","what":"Running Multi-trait GWAS","title":"Multi-trait GWAS with the statgenQTLxT package","text":"cleaned gData object can used performing multi-trait GWAS analysis. example trial Mur13W used demonstrate options runMultiTraitGwas() function, subset five traits. (millet2016?) choose factor analytic model genetic residual covariance. output runMultiTraitGwas() function object class GWAS. list consisting five elements described . GWAResult: list data.tables, one trial analysis run. data.table following columns: data.tables contain results traits anthesis grain.yield respectively. column effect trait specific, p-Value global null-hypothesis (\\(\\beta_1 = \\dots = \\beta_p = 0\\)) described ; P-values repeated trait. signSnp: list data.tables, one trial analysis run, containing significant SNPs. Optionally also SNPs close significant SNPs included data.table. See Significance thresholds information . data.tables signSnp consist columns GWAResult described . Two extra columns added: case significant SNPs: kinship: kinship matrix (matrices) used GWAS analysis. can either user provided kinship matrix kinship matrix computed running runMultiTraitGwas() function. thr: list thresholds, one trial analysis run, used determining significant SNPs. GWASInfo: additional information analysis, e.g. call type threshold used.","code":"## Run multi-trait GWAS for 5 traits in trial Mur13W. GWASDrops <- runMultiTraitGwas(gData = gDataDropsDedup,                                 traits = c(\"grain.yield\",\"grain.number\",                                           \"anthesis\", \"silking\" ,\"plant.height\"),                                trials = \"Mur13W\",                                 covModel = \"fa\") head(GWASDrops$GWAResult$Mur13W) #>              snp    trait chr    pos pValue   LOD effect effectSe allFreq #> 1:         SYN83 anthesis   1   3498  0.928 0.033  -0.14     0.19    0.60 #> 2: PZE-101000060 anthesis   1 157104  0.185 0.733   0.50     0.21    0.72 #> 3: PZE-101000088 anthesis   1 238347  0.078 1.110  -0.65     0.25    0.84 #> 4: PZE-101000083 anthesis   1 239225  0.503 0.298  -0.16     0.18    0.58 #> 5: PZE-101000108 anthesis   1 255850  0.654 0.185   0.17     0.34    0.90 #> 6: PZE-101000111 anthesis   1 263938  0.467 0.331  -0.41     0.24    0.83  head(GWASDrops$GWAResult$Mur13W[GWASDrops$GWAResult$Mur13W$trait == \"grain.yield\", ]) #>              snp       trait chr    pos pValue   LOD effect effectSe allFreq #> 1:         SYN83 grain.yield   1   3498  0.928 0.033 -0.060    0.096    0.60 #> 2: PZE-101000060 grain.yield   1 157104  0.185 0.733  0.038    0.102    0.72 #> 3: PZE-101000088 grain.yield   1 238347  0.078 1.110  0.018    0.124    0.84 #> 4: PZE-101000083 grain.yield   1 239225  0.503 0.298 -0.110    0.091    0.58 #> 5: PZE-101000108 grain.yield   1 255850  0.654 0.185 -0.092    0.163    0.90 #> 6: PZE-101000111 grain.yield   1 263938  0.467 0.331 -0.031    0.119    0.83 GWASDrops$signSnp$Mur13W #> NULL"},{"path":"/articles/statgenQTLxT.html","id":"gwas-summary","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial > Running Multi-trait GWAS","what":"GWAS Summary","title":"Multi-trait GWAS with the statgenQTLxT package","text":"quick overview results, e.g. number significant SNPs, use summary function.","code":"## Create summary of GWASDrops for the trait grain number. summary(GWASDrops, traits = \"grain.number\") #> Mur13W: #>  Traits analysed: anthesis, grain.number, grain.yield, plant.height, silking  #>  #>  Data are available for 36624 SNPs. #>   0 of them were not analyzed because their minor allele frequency is below 0.01  #>  #>  GLSMethod: single  #>  #>  Trait: grain.number  #>  #>      LOD-threshold: 5.9  #>      No significant SNPs found.  #>  #>      No genomic control correction was applied #>      Genomic control inflation-factor: 1.7"},{"path":"/articles/statgenQTLxT.html","id":"gwas-plots","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial > Running Multi-trait GWAS","what":"GWAS Plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"plot function can used visualize results GWASDrops, QQ-plot, Manhattan plot QTL-plot. details plotType available statgenGWAS vignette.","code":""},{"path":"/articles/statgenQTLxT.html","id":"qq-plots","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial > Running Multi-trait GWAS > GWAS Plots","what":"QQ plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"QQ-plot observed expected \\(-\\log_{10}(p)\\) values can made setting plotType = \"qq\". SNPs expected effect, resulting P-values uniformly distributed \\([0,1]\\), leading identity function (\\(y=x\\)) \\(-\\log_{10}(p)\\) scale. plot , deviations line occur right side plot, small number SNPs effect phenotype (possibly SNPs LD). inflation observed \\(-\\log_{10}(p)\\) values always line \\(y=x\\), (less common) deflation always line. QQ-plot therefore gives first impression quality GWAS model: example \\(-\\log_{10}(p)\\) values consistently large (inflation), correction genetic relatedness may adequate. case may interest correct P-values inflation, using genomicControl argument runMultiTraitGwas().","code":"## Plot a qq plot of GWAS Drops. plot(GWASDrops, plotType = \"qq\")"},{"path":"/articles/statgenQTLxT.html","id":"manhattan-plots","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial > Running Multi-trait GWAS > GWAS Plots","what":"Manhattan plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"Manhattan plot made setting plotType = \"manhattan\". Significant SNPs marked red.  options linked plotType = \"manhattan\" described statgenGWAS vignette.","code":"## Plot a manhattan plot of GWAS Drops. plot(GWASDrops, plotType = \"manhattan\")"},{"path":"/articles/statgenQTLxT.html","id":"qtl-plots","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial > Running Multi-trait GWAS > GWAS Plots","what":"QTL plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"qtl plot can made setting plotType = \"qtl\". plot significant SNPs marked circles genomic positions, diameter proportional estimated effect size; example see Millet et al. (2016). Typically, done multiple traits environments, genomic position x-axis, displayed horizontally can thus compared. Since traits measured different scale, effect estimates compared directly. better comparison, one can set normalize = TRUE, divides estimates standard deviation phenotype.  arguments can used plot subset chromosomes (chr) directly export plot .pptx (exportPptx = TRUE specify pptxName). Note officer package required . full list arguments can found running help(plot.GWAS).","code":"## Plot a qtl plot of GWAS Drops for Mur13W. ## Set significance threshold to 5 and normalize effect estimates. plot(GWASDrops, plotType = \"qtl\", yThr = 5, normalize = TRUE)"},{"path":"/articles/statgenQTLxT.html","id":"kinship-matrices","dir":"Articles","previous_headings":"Worked example 1: multiple traits in one trial","what":"Kinship matrices","title":"Multi-trait GWAS with the statgenQTLxT package","text":"runMultiTraitGwas() function argument kinshipMethod, defines kinship matrix used association mapping. Kinship matrices can computed directly using kinship function within runMultiTraitGwas function. five options: (1) using covariance scaled SNP-scores (kinshipMethod = \"astle\", default; see e.g. equation (2.2) Astle Balding (2009)) (2) Identity State (kinshipMethod = \"IBS\"; see e.g. equation (2.3) Astle Balding (2009)) (3) using formula VanRaden (2008) (kinshipMethod = \"vanRaden\") (4) using identity matrix (kinshipMethod = \"identity\"), corresponding kinship correction (5) User-defined, case argument kin needs specified. default, kinship matrix used testing SNPs (GLSMethod = \"single\"). GLSMethod = \"multi\", kinship matrix chromosome-specific. case, function fits variance components computes effect-estimates P-values chromosome turn, using kinship matrix chromosome (.e. using SNPs chromosome). chromosome-specific kinship matrix computed using method specified argument kinshipMethod. shown Rincent et al. (2014), can give considerable improvement power.","code":"## Run multi-trait GWAS for trial 'Mur13W'. ## Use chromosome specific kinship matrices computed using method of van Raden. GWASDropsChrSpec <- runMultiTraitGwas(gData = gDataDropsDedup,                                        trials = \"Mur13W\",                                       GLSMethod = \"multi\",                                       kinshipMethod = \"vanRaden\",                                       covModel = \"fa\")"},{"path":[]},{"path":"/articles/statgenQTLxT.html","id":"create-gdata-object-1","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials","what":"Create gData object","title":"Multi-trait GWAS with the statgenQTLxT package","text":"example, focus one trait, grain yield, trials. dropsPheno contains genotypic means 10 trials. able run GWAS analysis one trait measured trials, data reshaped added single data.frame “genotype” first column traits . Now create gData object containing map marker information phenotypes.","code":"## Reshape phenotypic data to data.frame in wide format containing only grain.yield. phenoDat <- reshape(dropsPheno[, c(\"Experiment\", \"genotype\", \"grain.yield\")],                      timevar = \"Experiment\",                      idvar = \"genotype\",                      direction = \"wide\",                      v.names = \"grain.yield\") ## Rename columns to trial name only. colnames(phenoDat)[2:ncol(phenoDat)] <-   gsub(pattern = \"grain.yield.\", replacement = \"\",        x = colnames(phenoDat)[2:ncol(phenoDat)]) ## Create a gData object containing map, marker and phenotypic information. gDataDropsxE <- statgenGWAS::createGData(geno = dropsMarkers,                                          map = dropsMap,                                           pheno = phenoDat) summary(gDataDropsxE) #> map #>  Number of markers: 41722  #>  Number of chromosomes: 10  #>  #> markers #>  Number of markers: 41722  #>  Number of genotypes: 246  #>  Content: #>   0 1 2 NA  #>   0.28 0.01 0.71 0  #>  #> pheno #>  Number of trials: 1  #>  #>  phenoDat: #>      Number of traits: 10  #>      Number of genotypes: 246  #>  #>         Kar12W Gai12W Kar13W Ner12R Mar13R Mur13R Cra12R Cam12R Kar13R Mur13W #> Min.       5.4    7.5    4.1    2.1    3.8    2.1  0.088   0.38    5.6    3.3 #> 1st Qu.    8.8   10.4    7.0    4.0    7.0    5.8  0.891   1.33    8.7    6.3 #> Median     9.9   11.2    7.9    4.7    7.7    6.9  1.381   1.87    9.8    7.5 #> Mean       9.7   11.2    8.0    4.7    7.8    6.9  1.492   1.98    9.9    7.4 #> 3rd Qu.   10.7   12.0    9.1    5.3    8.6    7.8  1.971   2.59   11.0    8.4 #> Max.      13.1   14.3   12.7    7.1   11.5   10.6  4.979   4.90   13.8   11.4 #> NA's       0.0    0.0    0.0    0.0    0.0    0.0  0.000   0.00    0.0    0.0"},{"path":"/articles/statgenQTLxT.html","id":"recoding-and-cleaning-of-markers-1","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials","what":"Recoding and cleaning of markers","title":"Multi-trait GWAS with the statgenQTLxT package","text":"","code":"## Remove duplicate SNPs from gDataDrops. gDataDropsDedupxE <- statgenGWAS::codeMarkers(gDataDropsxE,                                                impute = FALSE,                                               verbose = TRUE)  #> Input contains 41722 SNPs for 246 genotypes. #> 0 genotypes removed because proportion of missing values larger than or equal to 1. #> 0 SNPs removed because proportion of missing values larger than or equal to 1. #> 5098 duplicate SNPs removed. #> Output contains 36624 SNPs for 246 genotypes."},{"path":"/articles/statgenQTLxT.html","id":"multi-trial-gwas","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials","what":"Multi-trial GWAS","title":"Multi-trait GWAS with the statgenQTLxT package","text":"Similar first example run multi-trial GWAs using factor analytic model. Among significant SNPs find large QTL chromosome 6 reported Millet et al. (2016).","code":"## Run multi-trial GWAS for one trait in all trials. GWASDropsxE <- runMultiTraitGwas(gData = gDataDropsDedupxE,                                   covModel = \"fa\") head(GWASDropsxE$signSnp$pheno, row.names = FALSE) #>              snp  trait chr      pos  pValue  LOD effect effectSe allFreq       snpStatus propSnpVar #> 1:      SYN25281 Kar12W   6 18646369 1.6e-07  6.8   0.23    0.100    0.79 significant SNP      0.017 #> 2: PZE-106021363 Kar12W   6 18846283 7.4e-11 10.1   0.28    0.091    0.70 significant SNP      0.034 #> 3: PZE-106021410 Kar12W   6 18990291 2.5e-11 10.6   0.30    0.091    0.70 significant SNP      0.037 #> 4: PZE-106021419 Kar12W   6 18991091 1.5e-12 11.8   0.26    0.092    0.74 significant SNP      0.026 #> 5: PZE-106021420 Kar12W   6 18991117 2.2e-10  9.6   0.27    0.091    0.70 significant SNP      0.032 #> 6: PZE-106021424 Kar12W   6 18991481 4.2e-12 11.4   0.24    0.092    0.74 significant SNP      0.022"},{"path":"/articles/statgenQTLxT.html","id":"gwas-summary-1","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials > Multi-trial GWAS","what":"GWAS Summary","title":"Multi-trait GWAS with the statgenQTLxT package","text":"quick overview results, e.g. number significant SNPs, use summary function. restrict output two trials using traits argument.","code":"summary(GWASDropsxE, traits = c(\"Mur13W\", \"Kar12W\")) #> phenoDat: #>  Traits analysed: Cam12R, Cra12R, Gai12W, Kar12W, Kar13R, Kar13W, Mar13R, Mur13R, Mur13W, Ner12R  #>  #>  Data are available for 36624 SNPs. #>   0 of them were not analyzed because their minor allele frequency is below 0.01  #>  #>  GLSMethod: single  #>  #>  Trait: Mur13W  #>  #>      LOD-threshold: 5.9  #>      Number of significant SNPs: 8  #>      Smallest p-value among the significant SNPs: 1.5e-12  #>      Largest p-value among the significant SNPs: 3.9e-07 (LOD-score: 6.4) #>  #>      No genomic control correction was applied #>      Genomic control inflation-factor: 0.94  #>  #>  Trait: Kar12W  #>  #>      LOD-threshold: 5.9  #>      Number of significant SNPs: 8  #>      Smallest p-value among the significant SNPs: 1.5e-12  #>      Largest p-value among the significant SNPs: 3.9e-07 (LOD-score: 6.4) #>  #>      No genomic control correction was applied #>      Genomic control inflation-factor: 0.94"},{"path":"/articles/statgenQTLxT.html","id":"gwas-plots-1","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials > Multi-trial GWAS","what":"GWAS Plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"first example use plot.GWAS() function visualize results GWASDropsxE, QQ-plot, Manhattan plot QTL-plot.","code":""},{"path":"/articles/statgenQTLxT.html","id":"qq-plots-1","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials > Multi-trial GWAS > GWAS Plots","what":"QQ plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"","code":"plot(GWASDropsxE, plotType = \"qq\")"},{"path":"/articles/statgenQTLxT.html","id":"manhattan-plots-1","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials > Multi-trial GWAS > GWAS Plots","what":"Manhattan plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"","code":"plot(GWASDropsxE, plotType = \"manhattan\")"},{"path":"/articles/statgenQTLxT.html","id":"qtl-plots-1","dir":"Articles","previous_headings":"Worked example 2: one trait measured in multiple trials > Multi-trial GWAS > GWAS Plots","what":"QTL plots","title":"Multi-trait GWAS with the statgenQTLxT package","text":"trait measured scale across trials effect estimates can compared directly (one can set normalize = FALSE).","code":"## Set significance threshold to 6 and do not normalize effect estimates. plot(GWASDropsxE, plotType = \"qtl\", yThr = 6, normalize = FALSE)"},{"path":"/articles/statgenQTLxT.html","id":"opts","dir":"Articles","previous_headings":"","what":"Further options","title":"Multi-trait GWAS with the statgenQTLxT package","text":"runMultiTraitGwas() function many arguments can specified. section similar arguments grouped explained examples use .","code":""},{"path":"/articles/statgenQTLxT.html","id":"sign","dir":"Articles","previous_headings":"Further options","what":"Significance thresholds","title":"Multi-trait GWAS with the statgenQTLxT package","text":"threshold selecting significant SNPs GWAS analysis computed default using Bonferroni correction, alpha 0.05. alpha can modified setting option alpha calling runMultiTraitGwas(). Two threshold types can used: fixed threshold (thrType = \"fixed\") specifying \\(-\\log_{10}(p)\\) (LODThr) value threshold, threshold defines n SNPs highest \\(-\\log_{10}(p)\\) scores significant SNPs. Set thrType = \"small\" together nSnpLOD = n . following example, define SNPs \\(p < 10^{-4}\\) significant SNPs. Controlling false discovery rate final option selecting significant SNPs setting thrType = \"fdr\". significant SNPs won’t selected computing genome wide threshold, trying control rate false discoveries Brzyski et al. (2016). First, list defined containing SNPs P-value pThr, default 0.05. clusters SNPs created using two step iterative process SNPs lowest P-values selected cluster representatives. SNP SNPs correlation SNP \\(\\rho\\) higher (specified function argument rho, default 0.4) form cluster. selected SNPs removed list procedure repeated SNPs left. end step, one list clusters, corresponding vector P-values cluster representatives. Finally, determine number significant clusters, first cluster determined P-value cluster representative larger \\(cluster_{number} * \\alpha / m\\), \\(m\\) number SNPs \\(\\alpha\\) can specified corresponding function argument. previous clusters selected significant.","code":"## Run multi-trait GWAS for Mur13W. ## Use a fixed significance threshold of 4. GWASDropsFixThr <- runMultiTraitGwas(gData = gDataDropsDedup,                                      trials = \"Mur13W\",                                       covModel = \"fa\",                                      thrType = \"fixed\",                                      LODThr = 4)"},{"path":"/articles/statgenQTLxT.html","id":"variance-components","dir":"Articles","previous_headings":"Further options","what":"Variance components","title":"Multi-trait GWAS with the statgenQTLxT package","text":"three ways compute variance components used GWAS analysis. can specified setting argument covModel. See Models genetic residual covariance description options. Note covModel = unst can used less 10 traits trials. recommended use six nine trials computational reasons. Parallel computing improve performance using pairwise variance component model, possible use parallel computing. , parallel back-end specified user, e.g. using registerDoParallel doParallel package (see example ). addition, runMultiTraitGwas() function argument parallel set TRUE. settings computations done parallel per pair traits.","code":"## Run multi-trait GWAS for for Mur13W. ## Use a factor analytic model for computing the variance components. GWASDropsFA <- runMultiTraitGwas(gData = gDataDropsDedup,                                  trials = \"Mur13W\",                                  covModel = \"fa\")  ## Rerun the analysis, using the variance components computed in the  ## previous model as inputs. GWASDropsFA2 <- runMultiTraitGwas(gData = gDataDropsDedup,                                   trials = \"Mur13W\",                                   fitVarComp  = FALSE,                                   Vg = GWASDropsFA$GWASInfo$varComp$Vg,                                   Ve = GWASDropsFA$GWASInfo$varComp$Ve) ## Register parallel back-end with 2 cores. doParallel::registerDoParallel(cores = 2)  ## Run multi-trait GWAS for one trait in all trials. GWASDropsxEPar <- runMultiTraitGwas(gData = gDataDropsDedupxE,                                     covModel = \"pw\",                                     parallel = TRUE)"},{"path":"/articles/statgenQTLxT.html","id":"covariates","dir":"Articles","previous_headings":"Further options","what":"Covariates","title":"Multi-trait GWAS with the statgenQTLxT package","text":"Covariates can included extra fixed effects GWAS model. runMultiTraitGwas() function distinguishes ‘usual’ covariates SNP-covariates. former design factors block, traits one wants condition . latter case, covariate(s) one markers contained genotypic data. SNP-covariates can set argument snpCov, vector marker names. Similarly, covariates specified using argument covar, containing vector covariate names. gData object contain covariates gData$covar. case SNP-covariates used, GWAS SNPs performed SNP-covariates extra fixed effect; also null model used estimate variance components includes effects. SNP SNP-covariates, P-value obtained using F-test null model estimate variance components, SNPs () SNP-covariates fixed effects.","code":"## Run multi-trait GWAS for Mur13W. ## Use PZE-106021410, the most significant SNP, as SNP covariate. GWASDropsSnpCov <- runMultiTraitGwas(gData = gDataDropsDedup,                                      trials = \"Mur13W\",                                      snpCov = \"PZE-106021410\",                                      covModel = \"fa\")"},{"path":"/articles/statgenQTLxT.html","id":"minor-allele-frequency","dir":"Articles","previous_headings":"Further options","what":"Minor Allele Frequency","title":"Multi-trait GWAS with the statgenQTLxT package","text":"recommended remove SNPs low minor allele frequency (MAF) data starting GWAS analysis. However also possible analysis . difference approaches codeMarkers() removes SNPs, whereas runMultiTraitGwas() excludes analysis leaves output (results set NA). latter case still possible see allele frequency SNP. default SNPs MAF lower 0.01 excluded analysis. can controlled argument MAF. Setting MAF 0 still exclude duplicate SNPs since duplicates cause problems fitting underlying models.","code":"## Run multi-trait GWAS for Mur13W. ## Only include SNPs that have a MAF of 0.05 or higher. GWASDropsMAF <- runMultiTraitGwas(gData = gDataDropsDedup,                                   trials = \"Mur13W\",                                   covModel = \"fa\",                                   MAF = 0.05)"},{"path":"/articles/statgenQTLxT.html","id":"estimation-of-common-snp-effects-and-qtle-effects-","dir":"Articles","previous_headings":"Further options","what":"Estimation of common SNP effects and QTL×E effects.","title":"Multi-trait GWAS with the statgenQTLxT package","text":"Besides normal SNP-effect model, possible fit common SNP-effect model well (see Hypotheses SNP-effects). , addition SNP-effect, also common SNP-effect QTL×E effect corresponding standard errors P-values returned. included extra columns GWAResult data.table output function. SNPs significant QTLxE effect come regions SNPs supplementary table 6 Millet et al. (2016), however used different SNP set. Another difference explicitly test QTLxE within GWAS, whereas Millet et al. (2016) regressed SNP effects environmental covariates.","code":"## Run multi-trait GWAS for Mur13W. ## Fit an additional common sNP effect model. GWASDropsCommon <- runMultiTraitGwas(gData = gDataDropsDedup,                                      trials = \"Mur13W\",                                      covModel = \"fa\",                                      estCom = TRUE) head(GWASDropsCommon$GWAResult$Mur13W) #>              snp    trait chr    pos pValue    LOD effect effectSe allFreq pValCom effsCom effsComSe pValQtlE #> 1:         SYN83 anthesis   1   3498   0.98 0.0087  -0.12     0.19    0.60   0.536  -0.028     0.045     0.98 #> 2: PZE-101000060 anthesis   1 157104   0.20 0.6991   0.47     0.20    0.72   0.029   0.103     0.048     0.58 #> 3: PZE-101000088 anthesis   1 238347   0.19 0.7142  -0.61     0.25    0.84   0.049  -0.115     0.059     0.44 #> 4: PZE-101000083 anthesis   1 239225   0.76 0.1207  -0.16     0.18    0.58   0.203  -0.054     0.043     0.88 #> 5: PZE-101000108 anthesis   1 255850   0.60 0.2253   0.15     0.34    0.90   0.774  -0.023     0.079     0.48 #> 6: PZE-101000111 anthesis   1 263938   0.60 0.2217  -0.37     0.24    0.83   0.248  -0.064     0.055     0.66"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bart-Jan van Rossum. Author, maintainer. Willem Kruijer. Author. Fred van Eeuwijk. Contributor. Martin Boer. Contributor. Daniela Bustos-Korts. Contributor. Emilie J Millet. Contributor. Joao Paulo. Contributor. Maikel Verouden. Contributor. Ron Wehrens. Contributor. Choazhi Zheng. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Rossum B, Kruijer W (2023). statgenQTLxT: Multi-Trait Multi-Trial Genome Wide Association Studies. R package version 1.0.1.","code":"@Manual{,   title = {statgenQTLxT: Multi-Trait and Multi-Trial Genome Wide Association Studies},   author = {Bart-Jan {van Rossum} and Willem Kruijer},   year = {2023},   note = {R package version 1.0.1}, }"},{"path":"/index.html","id":"statgenqtlxt","dir":"","previous_headings":"","what":"An R package for fast multi-trait and multi-trial GWAS","title":"An R package for fast multi-trait and multi-trial GWAS","text":"statgenQTLxT R package fast multi-trait multi-trial Genome Wide Association Studies (GWAS). statgenQTLxT extensive options summarizing visualizing results. builds statgenGWAS package (single trait GWAS) available CRAN. package uses data structures plots defined statgenGWAS package. recommended read vignette package, accessible R via vignette(package = \"statgenGWAS\") online https://biometris.github.io/statgenGWAS/articles/GWAS.html get general idea . full description theoretical background fully worked example see vignette.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for fast multi-trait and multi-trial GWAS","text":"Install CRAN: Install latest development version GitHub (requires remotes package):","code":"install.packages(\"statgenQTLxT\") remotes::install_github(\"Biometris/statgenQTLxT\", ref = \"develop\", dependencies = TRUE)"},{"path":"/reference/EMFA.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor analytic variation of EM algoritm — EMFA","title":"Factor analytic variation of EM algoritm — EMFA","text":"Implementation factor analytic variation EM algoritm proposed Dahl et al. (2013).","code":""},{"path":"/reference/EMFA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor analytic variation of EM algoritm — EMFA","text":"","code":"EMFA(   y,   k,   size_param_x = NULL,   cmHet = TRUE,   dmHet = TRUE,   tolerance = 1e-06,   maxIter = 300L,   size_param_cmStart = NULL,   size_param_dmStart = NULL,   mG = 1L,   mE = 1L,   maxDiag = 10000,   stopIfDecreasing = TRUE,   traits = \"\" )"},{"path":"/reference/EMFA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor analytic variation of EM algoritm — EMFA","text":"y n x p matrix observed phenotypes, p traits environments n individuals. missing values allowed. k n x n kinship matrix. size_param_x n x c covariate matrix, c number covariates n number genotypes. c least one (typically intercept). missing values allowed. provided vector 1s used. cmHet extra diagonal part added model precision matrix Cm? dmHet extra diagonal part added model precision matrix Dm? tolerance numerical value. iterating process stops difference conditional log-likelihood two consecutive iterations drops tolerance. maxIter numerical value maximum number iterations. size_param_cmStart p x p matrix containing starting values precision matrix Cm. size_param_dmStart p x p matrix containing starting values precision matrix Dm. mG integer. order genetic part model. integer. order environmental part model. maxDiag numical value. maximal value diagonal elements precision matrices Cm Dm (ignoring low-rank part W W^t) stopIfDecreasing iterating process stop 50 iterations log-likelihood decreases two consecutive iterations?","code":""},{"path":"/reference/EMFA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factor analytic variation of EM algoritm — EMFA","text":"list containing following components Vg genetic variance components matrix. Ve environmental variance components matrix.","code":""},{"path":"/reference/EMFA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Factor analytic variation of EM algoritm — EMFA","text":"Dahl et al. (2013). Network inference matrix-variate Gaussian models non-independent noise. arXiv preprint arXiv:1312.1622. Zhou, X. Stephens, M. (2014). Efficient multivariate linear mixed model algorithms genome-wide association studies. Nature Methods, February 2014, Vol. 11, p. 407–409","code":""},{"path":"/reference/LLQuadFormDiagCPP.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute tYPY as in Zhou and Stephens eqn. 50. — LLQuadFormDiagCPP","title":"Compute tYPY as in Zhou and Stephens eqn. 50. — LLQuadFormDiagCPP","text":"Compute \\(t(y) * P * y\\), part log-likelihood functions equation 26 27 Zhou Stephens using equation 50. Equation 56, 57 58 used actual computations.","code":""},{"path":"/reference/LLQuadFormDiagCPP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute tYPY as in Zhou and Stephens eqn. 50. — LLQuadFormDiagCPP","text":"","code":"LLQuadFormDiagCPP(y, vInv, size_param_x = NULL)"},{"path":"/reference/LLQuadFormDiagCPP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute tYPY as in Zhou and Stephens eqn. 50. — LLQuadFormDiagCPP","text":"y n x p matrix observed phenotypes, p traits environments n genotypes. missing values allowed. vInv n x p x p cube containing genotype l p x p matrix \\(v_l ^ {-1}\\) (notation Zhou Stephens). size_param_x optional c x n covariate matrix, c number covariates n number genotypes. c least one (typically intercept). missing values allowed.","code":""},{"path":"/reference/LLQuadFormDiagCPP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute tYPY as in Zhou and Stephens eqn. 50. — LLQuadFormDiagCPP","text":"numerical value \\(t(y) * P * y\\) part log-likelihood function.","code":""},{"path":"/reference/LLQuadFormDiagCPP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute tYPY as in Zhou and Stephens eqn. 50. — LLQuadFormDiagCPP","text":"assumed X Y already rotated Uk, Uk kinship matrix K equals \\(K = Uk * Dk * t(Uk)\\). original X Y right multiplied Uk, e.g. Y <- Y * Uk. See Zhou Stephens (2014), supplement. rotated versions input function.","code":""},{"path":"/reference/LLQuadFormDiagCPP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute tYPY as in Zhou and Stephens eqn. 50. — LLQuadFormDiagCPP","text":"Zhou, X. Stephens, M. (2014). Efficient multivariate linear mixed model algorithms genome-wide association studies. Nature Methods, February 2014, Vol. 11, p. 407–409","code":""},{"path":"/reference/covUnstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute unstructured covariance — covUnstr","title":"Compute unstructured covariance — covUnstr","text":"Compute unstructured covariance pairwise using covPairwise using single model using covUnstr.","code":""},{"path":"/reference/covUnstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute unstructured covariance — covUnstr","text":"","code":"covUnstr(Y, K, X = NULL, fixDiag = FALSE, VeDiag = FALSE)  covPW(Y, K, X = NULL, fixDiag = FALSE, corMat = FALSE, parallel = FALSE)"},{"path":"/reference/covUnstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute unstructured covariance — covUnstr","text":"Y n x p matrix observed phenotypes, p traits trials n individuals. missing values allowed. K n x n kinship matrix. X n x c covariate matrix, c number covariates n number genotypes. fixDiag diagonal covariate matrix fixed calculations? -- YET IMPLEMENTED VeDiag Ve diagonal matrix? corMat output correlation matrix instead covariance matrix? parallel computation variance components done parallel?","code":""},{"path":"/reference/covUnstr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute unstructured covariance — covUnstr","text":"list two matrices Vg Ve containing genotypic environmental variance components respectively.","code":""},{"path":"/reference/estEffTot.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for estimating effect — estEffTot","title":"Helper function for estimating effect — estEffTot","text":"Function wrapper around estEffsCPP, useful usage chromosome specific calculations.","code":""},{"path":"/reference/estEffTot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for estimating effect — estEffTot","text":"","code":"estEffTot(   markers,   X,   Y,   K,   XRed,   Vg,   Ve,   VgRed,   VeRed,   snpCov,   allFreq,   MAF,   estCom,   nCores = NULL )"},{"path":"/reference/estEffsCPP.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates for covariates — estEffsCPP","title":"Estimates for covariates — estEffsCPP","text":"Compute estimates standard errors covariates input matrix W.","code":""},{"path":"/reference/estEffsCPP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates for covariates — estEffsCPP","text":"","code":"estEffsCPP(   y0,   w0,   x0,   vg,   ve,   k,   returnSe = TRUE,   estCom = FALSE,   nCores = NULL )"},{"path":"/reference/estEffsCPP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates for covariates — estEffsCPP","text":"vg p x p matrix genetic covariances. ve p x p matrix environmental covariances. k n x n genetic relatedness matrix. returnSe standard errors p-values returned? estCom common SNP-effect model fitted? y n x p matrix observed phenotypes, p traits environments n genotypes. missing values allowed. w n x c covariate matrix, c number covariates n number genotypes. c least one (typically intercept). missing values allowed. x n x ns matrix marker scores. Neither missing values non-segregating markers allowed. ncores integer indicating number cores used parallel computation.","code":""},{"path":"/reference/estEffsCPP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates for covariates — estEffsCPP","text":"list containing estimates, optionally standard errors estimates corresponding p-values. estCom = TRUE also common SNP-effects, standard errors corresponding p-values p-values QtlxE output.","code":""},{"path":"/reference/estEffsCPP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimates for covariates — estEffsCPP","text":"Zhou, X. Stephens, M. (2014). Efficient multivariate linear mixed model algorithms genome-wide association studies. Nature Methods, February 2014, Vol. 11, p. 407–409","code":""},{"path":"/reference/exclMarkers.html","id":null,"dir":"Reference","previous_headings":"","what":"Select markers to be excluded from GWAS scan. — exclMarkers","title":"Select markers to be excluded from GWAS scan. — exclMarkers","text":"Helper function selecting markers excluded GWAS scan. Markers excluded identical snpCovariates (including snpCovariates ).","code":""},{"path":"/reference/exclMarkers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select markers to be excluded from GWAS scan. — exclMarkers","text":"","code":"exclMarkers(snpCov, markers, allFreq, ref = NULL)"},{"path":"/reference/exclMarkers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select markers to be excluded from GWAS scan. — exclMarkers","text":"snpCov character vector snpCovariates. markers matrix marker information. allFreq numerical vector allele frequencies markers markers. computed markers well needed general algorithm redo things unnecessarily redone .","code":""},{"path":"/reference/exclMarkers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select markers to be excluded from GWAS scan. — exclMarkers","text":"numerical vector markers exluded GWAS scan.","code":""},{"path":"/reference/gDataDropsRestr.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset of DROPS data for use in examples — gDataDropsRestr","title":"Subset of DROPS data for use in examples — gDataDropsRestr","text":"gData object based subset DROPS data set used statgenGWAS package. data restricted 3 traits 10% (just 4000) available markers. full description data set see dropsData.","code":""},{"path":"/reference/gDataDropsRestr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset of DROPS data for use in examples — gDataDropsRestr","text":"","code":"gDataDropsRestr"},{"path":"/reference/gDataDropsRestr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subset of DROPS data for use in examples — gDataDropsRestr","text":"object class gData length 5.","code":""},{"path":"/reference/gDataDropsRestr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subset of DROPS data for use in examples — gDataDropsRestr","text":"doi:10.15454/IASSTN","code":""},{"path":"/reference/gDataDropsRestr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subset of DROPS data for use in examples — gDataDropsRestr","text":"Millet, E. J., Pommier, C., et al. (2019). multi-site experiment network European fields assessing maize yield response environmental scenarios - Data set. doi:10.15454/IASSTN Ganal MW, et al. (2011) Large Maize (Zea mays L.) SNP Genotyping Array: Development Germplasm Genotyping, Genetic Mapping Compare B73 Reference Genome. PLoS ONE 6(12): e28334. doi:10.1371/journal.pone.0028334","code":""},{"path":"/reference/runMultiTraitGwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform multi-trait GWAS — runMultiTraitGwas","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"runMultiTraitGwas performs multi-trait multi-environment Genome Wide Association mapping phenotypic genotypic data contained gData object.","code":""},{"path":"/reference/runMultiTraitGwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"","code":"runMultiTraitGwas(   gData,   trials = NULL,   traits = NULL,   covar = NULL,   snpCov = NULL,   kin = NULL,   kinshipMethod = c(\"astle\", \"IBS\", \"vanRaden\", \"identity\"),   GLSMethod = c(\"single\", \"multi\"),   estCom = FALSE,   useMAF = TRUE,   MAF = 0.01,   MAC = 10,   genomicControl = FALSE,   fitVarComp = TRUE,   covModel = c(\"unst\", \"pw\", \"fa\"),   VeDiag = TRUE,   maxIter = 2e+05,   mG = 1,   mE = 1,   Vg = NULL,   Ve = NULL,   thrType = c(\"bonf\", \"fixed\", \"small\", \"fdr\"),   alpha = 0.05,   LODThr = 4,   nSnpLOD = 10,   pThr = 0.05,   rho = 0.4,   sizeInclRegion = 0,   minR2 = 0.5,   parallel = FALSE,   nCores = NULL )"},{"path":"/reference/runMultiTraitGwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"gData object class gData containing least map, markers pheno. latter contain missing values. Multi-trait multi-environment GWAS performed variables pheno. trials vector specifying environment run GWAS. can either numeric index character name list item pheno. traits vector traits run GWAS. can either numeric indices character names columns pheno. NULL, GWAS run traits. covar optional vector covariates taken account running GWAS. can either numeric indices character names columns covar gData. NULL, covariates used. intercept included automatically (assigned covariate). SNP-covariates assigned using snpCov parameter. snpCov optional character vector SNP-names included covariates. SNP-names match used gData. kin optional kinship matrix list kinship matrices. matrices can matrix class defined base package dsyMatrix class, class symmetric matrices Matrix package. GLSMethod = \"single\" one matrix provided, GLSMethod = \"multi\", list chromosome specific matrices length equal number chromosomes map gData. NULL matrix kinship gData used.  kin provided gData contains matrix kinship kin used. kinshipMethod optional character indicating method used calculating kinship matrix(ces). Currently \"astle\" (Astle Balding, 2009), \"IBS\", \"vanRaden\" (VanRaden, 2008), \"identity\" supported. kinship matrix supplied either gData parameter kin, kinshipMethod ignored. GLSMethod character string indicating method used estimate marker effects. Either single using single kinship matrix, multi using chromosome specific kinship matrices. estCom common SNP-effect model fitted? TRUE SNP-effects also common SNP-effect QTL x E effect estimated. useMAF minor allele frequency used selecting SNPs analysis. FALSE, minor allele count used instead. MAF minor allele frequency (MAF) threshold used GWAS. numerical value 0 1. SNPs MAF value taken account analysis, .e. p-values effect sizes put missing (NA). Ignored useMAF FALSE. MAC numerical value. SNPs minor allele count value taken account analysis, .e. p-values effect sizes set missing (NA). Ignored useMAF TRUE. genomicControl genomic control correction Devlin Roeder (1999) applied? fitVarComp variance components fitted? FALSE, supplied Vg Ve. covModel character string indicating covariance model genetic background (Vg) residual effects (Ve); see details. Either unst unstructured Vg Ve (Zhou Stephens (2014)), pw unstructered Vg Ve (pairwise, Furlotte Eskin (2013)) fa factor-analytic Vg Ve. Ignored fitVarComp = FALSE VeDiag environmental correlations covModel = \"unst\" \"pw\"? traits measured individuals, put TRUE. maxIter integer maximum number iterations. used covModel = \"fa\". mG integer. order genetic part factor analytic model. used covModel = \"fa\". integer. order environmental part factor analytic model. used covModel = \"fa\". Vg optional matrix genotypic variance components. Vg row column names corresponding column names gData$pheno. may contain additional rows columns ignored. Ignored fitVarComp = TRUE. Ve optional matrix environmental variance components. Ve row names column names corresponding column names gData$pheno. may contain additional rows columns ignored. Ignored fitVarComp = TRUE. thrType character string indicating type threshold used selection candidate loci. Either bonf using Bonferroni threshold, LOD-threshold \\(-log10(alpha/p)\\), p number markers alpha can specified alpha, fixed self-chosen fixed LOD-threshold, specified LODThr small, LOD-threshold chosen SNPs nSnpLOD smallest p-values selected. nSnpLOD can specified. alpha numerical value used calculating LOD-threshold thrType = \"bonf\" significant p-Values thrType = \"fdr\". LODThr numerical value used LOD-threshold thrType = \"fixed\". nSnpLOD numerical value indicating number SNPs smallest p-values selected thrType = \"small\". pThr numerical value just cut value p-Values thrType = \"fdr\". rho numerical value used minimum value SNPs considered correlated using thrType = \"fdr\". sizeInclRegion integer. results SNPs close significant SNPs included? , size region centimorgan base pairs. Otherwise 0. minR2 numerical value 0 1. Restricts SNPs included region close significant SNPs SNPs sufficient Linkage Disequilibrium (LD) significant snp, LD measured terms \\(R^2\\). example sizeInclRegion = 200000 minR2 = 0.5, every significant SNP also SNPs whose LD (\\(R^2\\)) significant SNP least 0.5 200000 away significant snp included. Ignored sizeInclRegion = 0. parallel computation variance components done parallel? used covModel = \"pw\". parallel computing environment setup user. nCores numerical value indicating number cores used parallel part algorithm. NULL number cores used equal number cores available machine - 1.","code":""},{"path":"/reference/runMultiTraitGwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"object class GWAS.","code":""},{"path":"/reference/runMultiTraitGwas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"runMultiTraitGwas estimates effect SNP different trials different traits, one SNP time. Genetic residual covariances fitted , model without SNPs. Following diagonalization scheme Zhou Stephens (2014), following model fit \\(Y = \\left(\\begin{array}{c} Y_1 \\\\ \\vdots \\\\ Y_p\\end{array}\\right) = \\left(\\begin{array}{c} X_1\\gamma_1 \\\\ \\vdots \\\\ X_p\\gamma_p\\end{array}\\right) + \\left(\\begin{array}{c} x_1\\beta_1 \\\\ \\vdots \\\\ x_p\\beta_p\\end{array}\\right) + \\left(\\begin{array}{c} G_1 \\\\ \\vdots \\\\ G_p\\end{array}\\right) + \\left(\\begin{array}{c} E_1 \\\\ \\vdots \\\\ E_p\\end{array}\\right)\\) \\(Y\\) \\(np \\times 1\\) vector phenotypic values \\(n\\) genotypes \\(p\\) traits trials. \\(x\\) \\(n \\times 1\\) vector scores marker consideration, \\(X\\) \\(n \\times q\\) design matrix covariates. default trait (environment) specific intercept included. vector genetic background effects (\\(\\left(\\begin{array}{c}G_1 \\\\ \\vdots \\\\ G_p\\end{array}\\right)\\)) Gaussian zero mean covariance \\(V_g \\otimes K\\), \\(V_g\\) \\(p \\times p\\) matrix genetic (co)variances, \\(K\\) \\(n \\times n\\) kinship matrix. Similarly, residual errors (\\(\\left(\\begin{array}{c}E_1 \\\\ \\vdots \\\\ E_p\\end{array}\\right)\\)) covariance \\(V_e \\otimes I_n\\), \\(p \\times p\\) matrix \\(V_e\\) residual (co)variances.","code":""},{"path":"/reference/runMultiTraitGwas.html","id":"hypotheses-for-the-snp-effects","dir":"Reference","previous_headings":"","what":"Hypotheses for the SNP-effects","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"SNP, null-hypothesis \\(\\beta_1 = \\dots = \\beta_p = 0\\) tested, using likelihood ratio test (LRT) described Zhou Stephens (2014). estCom = TRUE, additional tests common effect QTL x E performed, using parameterization \\(\\beta_j = \\alpha + \\alpha_j (1 \\leq j \\leq p)\\). Korte et al (2012), use likelihood ratio tests, restricted bivariate case. common effect, fit reduced model \\(\\beta_j = \\alpha\\), test \\(\\alpha = 0\\). QTL--environment interaction, test \\(\\alpha_1 = \\dots = \\alpha_p = 0\\).","code":""},{"path":"/reference/runMultiTraitGwas.html","id":"models-for-the-genetic-and-residual-covariance","dir":"Reference","previous_headings":"","what":"Models for the genetic and residual covariance","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"\\(V_g\\) \\(V_e\\) can provided user (fitVarComp = FALSE); otherwise one following models used, depending covModel. covModel = \"unst\", unstructured model assumed, Zhou Stephens (2014): \\(V_g\\) \\(V_e\\) can positive-definite matrix, requiring total \\(p(p + 1)/2\\) parameters per matrix. covModel = \"fa\", factor-analytic model fitted using EM-algorithm, Millet et al (2016). \\(V_g\\) \\(V_e\\) assumed form \\(W W^t + D\\), \\(W\\) \\(p \\times m\\) matrix factor loadings \\(D\\) diagonal matrix trait environment specific values. \\(m\\) order model, parameters mG specify order used respectively \\(V_g\\) \\(V_e\\). maxIter sets maximum number iterations used EM-algorithm. Finally, covModel = \"pw\", \\(V_g\\) \\(V_e\\) estimated 'pairwise', Furlotte Eskin (2015). Looping pairs traits trials \\(1 \\leq j < k \\leq p\\), \\(V_g[j,k] = V_g[k,j]\\) \\(V_e[j,k] = V_e[k,j]\\) estimated assuming bivariate mixed model. diagonals \\(V_g\\) \\(V_e\\) fitted assuming univariate mixed models. resulting \\(V_g\\) \\(V_e\\) positive-definite, replaced nearest positive-definite matrix. case covModel = \"unst\" \"pw\" possible assume \\(V_e\\) diagonal (VeDiag = TRUE)","code":""},{"path":"/reference/runMultiTraitGwas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"Dahl et al. (2013). Network inference matrix-variate Gaussian models non-independent noise. arXiv preprint arXiv:1312.1622. Furlotte, N.. Eskin, E. (2015). Efficient multiple-trait association estimation genetic correlation using matrix-variate linear mixed model. Genetics, May 2015, Vol.200-1, p. 59-68. Korte et al. (2012). mixed-model approach genome-wide association studies correlated traits structured populations. Nature Genetics, 44(9), 1066–1071. doi:10.1038/ng.2376 Millet et al. (2016). Genome-wide analysis yield Europe: allelic effects functions drought heat scenarios. Plant Physiology, pp.00621.2016. doi:10.1104/pp.16.00621 Thoen et al. (2016). Genetic architecture plant stress resistance: multi-trait genome-wide association mapping. New Phytologist, 213(3), 1346–1362. doi:10.1111/nph.14220 Zhou, X. Stephens, M. (2014). Efficient multivariate linear mixed model algorithms genome-wide association studies. Nature Methods, February 2014, Vol. 11, p. 407–409.","code":""},{"path":"/reference/runMultiTraitGwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform multi-trait GWAS — runMultiTraitGwas","text":"","code":"## First create a gData object. ## See the vignette for a detailed description. ## Here we use the gData object included in the package  ## Run multi-trait GWAS ## Use a factor analytic model to estimate variance components. # \\donttest{ mtg0 <- runMultiTraitGwas(gDataDropsRestr,                          trial = \"Mur13W\",                          covModel = \"fa\") # }  ## Plot the results. ## For details on the different plots see plot.GWAS # \\donttest{ plot(mtg0, plotType = \"qq\")  plot(mtg0, plotType = \"manhattan\")  plot(mtg0, plotType = \"qtl\", yThr = 3.5)  # }  ## Run multi-trait GWAS ## Use a pairwise model to estimate variance components. ## Estimate common effects and set a fixed threshold for significant SNPs # \\donttest{ mtg1 <- runMultiTraitGwas(gDataDropsRestr,                          trial = \"Mur13W\",                          covModel = \"pw\",                          estCom = TRUE,                          thrType = \"fixed\",                          LODThr = 3) #> Version out of date. Please update sommer to the newest version using: #> install.packages('sommer') in a new session #>  Use the 'dateWarning' argument to disable the warning message.Version out of date. Please update sommer to the newest version using: #> install.packages('sommer') in a new session #>  Use the 'dateWarning' argument to disable the warning message.Version out of date. Please update sommer to the newest version using: #> install.packages('sommer') in a new session #>  Use the 'dateWarning' argument to disable the warning message. #> Loading required package: Matrix #> Loading required package: MASS #> Loading required package: lattice #> Loading required package: crayon # }  ## Run multi-trait GWAS ## Use an unstructured model to estimate variance components. ## Identify the 5 SNPs with smallest p-values as significant SNPs. ## Compute the kinship matrix using the vanRaden method. # \\donttest{ mtg2 <- runMultiTraitGwas(gDataDropsRestr,                          trial = \"Mur13W\",                          kinshipMethod = \"vanRaden\",                          covModel = \"unst\",                          thrType = \"small\",                          nSnpLOD = 5) #> Version out of date. Please update sommer to the newest version using: #> install.packages('sommer') in a new session #>  Use the 'dateWarning' argument to disable the warning message.Version out of date. Please update sommer to the newest version using: #> install.packages('sommer') in a new session #>  Use the 'dateWarning' argument to disable the warning message.Version out of date. Please update sommer to the newest version using: #> install.packages('sommer') in a new session #>  Use the 'dateWarning' argument to disable the warning message. # }"},{"path":"/reference/statgenQTLxT-package.html","id":null,"dir":"Reference","previous_headings":"","what":"statgenQTLxT: Multi-Trait and Multi-Trial Genome Wide Association Studies — statgenQTLxT-package","title":"statgenQTLxT: Multi-Trait and Multi-Trial Genome Wide Association Studies — statgenQTLxT-package","text":"Fast multi-trait multi-trail Genome Wide Association Studies (GWAS) following method described Zhou Stephens. (2014), doi:10.1038/nmeth.2848 . One series statistical genetic packages streamlining analysis typical plant breeding experiments developed Biometris.","code":""},{"path":"/reference/statgenQTLxT-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"statgenQTLxT: Multi-Trait and Multi-Trial Genome Wide Association Studies — statgenQTLxT-package","text":"Maintainer: Bart-Jan van Rossum bart-jan.vanrossum@wur.nl (ORCID) Authors: Willem Kruijer (ORCID) contributors: Fred van Eeuwijk (ORCID) [contributor] Martin Boer (ORCID) [contributor] Daniela Bustos-Korts (ORCID) [contributor] Emilie J Millet (ORCID) [contributor] Joao Paulo (ORCID) [contributor] Maikel Verouden (ORCID) [contributor] Ron Wehrens (ORCID) [contributor] Choazhi Zheng (ORCID) [contributor]","code":""},{"path":"/reference/updateFA.html","id":null,"dir":"Reference","previous_headings":"","what":"Update W and P in EMFA algorithm — updateFA","title":"Update W and P in EMFA algorithm — updateFA","text":"Update W P used iteration process EMFA algorithm.","code":""},{"path":"/reference/updateFA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update W and P in EMFA algorithm — updateFA","text":"","code":"updateFA(   y,   wStart,   pStart,   wNew,   pNew,   m0,   hetVar = FALSE,   maxDiag = 10000,   tolerance = 1e-04,   maxIter = 100L,   printProgress = FALSE )"},{"path":"/reference/updateFA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update W and P in EMFA algorithm — updateFA","text":"hetVar extra diagonal part added model precision matrix? maxDiag numerical value maximum value diagonal P. tolerance numerical value. iterating process stops sum difference P W two steps gets lower value. maxIter numerical value maximum number iterations. printProgress progress printed iterations? Y n x p matrix data.frame. WStart p x p matrix data.frame containing starting values W. m integer. order model. PStart p x p matrix data.frame containing starting values P.","code":""},{"path":"/reference/updateFAHomVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Update W and P in EMFA algorithm for homogeneous variance. — updateFAHomVar","title":"Update W and P in EMFA algorithm for homogeneous variance. — updateFAHomVar","text":"Update W P used iteration process EMFA algorithm case variance homogeneous.","code":""},{"path":"/reference/updateFAHomVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update W and P in EMFA algorithm for homogeneous variance. — updateFAHomVar","text":"","code":"updateFAHomVar(s, wNew, pNew, m, maxDiag = 10000)"},{"path":"/reference/updateFAHomVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update W and P in EMFA algorithm for homogeneous variance. — updateFAHomVar","text":"s p x p sample covariance matrix. m integer. order model. maxDiag numerical value maximum value sigma2.","code":""},{"path":"/reference/updatePrec.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for updating precision matrix. — updatePrec","title":"Helper function for updating precision matrix. — updatePrec","text":"Helper function updating precision matrices EMFA algorithm.","code":""},{"path":"/reference/updatePrec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for updating precision matrix. — updatePrec","text":"","code":"updatePrec(m, nc, omega, w, p, wNew, pNew, cNew, het, maxDiag)"},{"path":"/reference/updatePrec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for updating precision matrix. — updatePrec","text":"m integer, order model. nc integer, number traits genotypes. omega computed matrix current step algoritm. w model matrix current step algorithm. p model matrix current step algorithm. wNew pointer updated model matrix w. pNew pointer updated model matrix p. cNew pointer updated matrix c. het extra diagonal part added model precision matrix. maxDiag numerical value maximum value sigma2.","code":""},{"path":"/reference/vecInvDiag.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for the penalized EM algorithm — vecInvDiag","title":"Helper functions for the penalized EM algorithm — vecInvDiag","text":"vecInvDiag helper function quickly computing \\((+ x \\otimes y)^{-1}\\), tracePInvDiag quickly computing column sums \\((+ x \\otimes y)^{-1}\\). used penalized EM algorithm.","code":""},{"path":"/reference/vecInvDiag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for the penalized EM algorithm — vecInvDiag","text":"","code":"vecInvDiag(x, y)  tracePInvDiag(x, y)"},{"path":"/reference/vecInvDiag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for the penalized EM algorithm — vecInvDiag","text":"x numeric vector y numeric vector","code":""},{"path":"/reference/vecInvDiag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functions for the penalized EM algorithm — vecInvDiag","text":"vecInvDiag matrix defined \\((+ x \\otimes y)^{-1}\\), tracePInvDiag vector containing column sums \\((+ x \\otimes y)^{-1}\\).","code":""},{"path":"/news/index.html","id":"statgenqtlxt-100","dir":"Changelog","previous_headings":"","what":"statgenQTLxT 1.0.0","title":"statgenQTLxT 1.0.0","text":"CRAN release: 2023-02-23 Initial CRAN version","code":""}]
